{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\dios\\\\Desktop\\\\test\\\\front\\\\src\\\\pages\\\\cadastro.tsx\";\nimport React from 'react';\nimport { Container, Formulario, Conteudo, BodyForm } from '../styles/stylesPage/cadastroStyles';\nimport Imput from './inputs/input';\nimport Link from 'next/link';\nimport * as Yup from 'yup';\nimport { Formik, Form, Field, ErrorMessage } from 'formik';\nconst avaliar = Yup.object().shape({\n  name: Yup.string().min(3, \"\").required(),\n  password: Yup.string().min(8, \"\").required().max(15, 'A quantidade máxima é 15'),\n  email: Yup.string().email().required(),\n  // nacionalidade_guia:Yup.string().required(t('FieldRequired')),\n  confirmPassword: Yup.string().oneOf([Yup.ref('senha_guia'), null], \" \").required() // idade_guia:Yup.number().moreThan(17,t('AgeInputError')).required(t('FieldRequired')),\n  // telefone_guia: Yup.string().required(t('FieldRequired'))\n\n});\n\nasync function CadastroElementos(values) {\n  const data = {\n    nome_guia: values.nome_guia,\n    email_guia: values.email_guia,\n    senha_guia: values.senha_guia\n  };\n  /** caso tenha algum problema com a conexão mostra o erro específico */\n\n  try {\n    const response = await api.post('guia', data);\n    alert(JSON.stringify(response.data.message));\n    history.push('/login');\n  } catch (err) {\n    // alert('Erro no estabelecer conexão. ' + err.response.data.message)\n    console.log(data);\n    alert('Erro no estabelecer conexão. ' + err);\n  }\n}\n\nconst Cadastro = () => {\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: [/*#__PURE__*/_jsxDEV(Conteudo, {\n      children: \"s\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 16\n    }, this), /*#__PURE__*/_jsxDEV(Formulario, {\n      children: [/*#__PURE__*/_jsxDEV(Formik, {\n        initialValues: {\n          email: '',\n          password: ''\n        },\n        validationSchema: avaliar,\n        onSubmit: values => {\n          CadastroElementos(values);\n        },\n        children: ({\n          values,\n          dirty,\n          isValid,\n          handleChange,\n          isSubmitting\n        }) => /*#__PURE__*/_jsxDEV(Form, {\n          children: /*#__PURE__*/_jsxDEV(BodyForm, {\n            children: [/*#__PURE__*/_jsxDEV(Field, {\n              type: \"text\",\n              name: \"name\",\n              as: Imput,\n              className: \"formCampo\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 53,\n              columnNumber: 12\n            }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n              name: \"name\",\n              component: \"div\",\n              className: \"formCampo\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 54,\n              columnNumber: 12\n            }, this), /*#__PURE__*/_jsxDEV(Field, {\n              type: \"email\",\n              name: \"email\",\n              as: Imput,\n              className: \"formCampo\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 55,\n              columnNumber: 12\n            }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n              name: \"email\",\n              component: \"div\",\n              className: \"formCampo\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 56,\n              columnNumber: 12\n            }, this), /*#__PURE__*/_jsxDEV(Field, {\n              type: \"password\",\n              name: \"password\",\n              as: Imput,\n              className: \"formCampo\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 57,\n              columnNumber: 12\n            }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n              name: \"password\",\n              component: \"div\",\n              className: \"formCampo\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 58,\n              columnNumber: 12\n            }, this), /*#__PURE__*/_jsxDEV(Field, {\n              type: \"password\",\n              name: \"confirmPassword\",\n              as: Imput,\n              className: \"formCampo\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 59,\n              columnNumber: 12\n            }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n              name: \"password\",\n              component: \"div\",\n              className: \"formCampo\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 60,\n              columnNumber: 12\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"submit\",\n              disabled: isSubmitting,\n              children: \"Submit\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 62,\n              columnNumber: 12\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 14\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 10\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(Link, {\n        href: \"/\",\n        children: /*#__PURE__*/_jsxDEV(\"a\", {\n          children: \"Login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 20\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 6\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 12\n  }, this);\n};\n\nexport default Cadastro;","map":{"version":3,"sources":["C:/Users/dios/Desktop/test/front/src/pages/cadastro.tsx"],"names":["React","Container","Formulario","Conteudo","BodyForm","Imput","Link","Yup","Formik","Form","Field","ErrorMessage","avaliar","object","shape","name","string","min","required","password","max","email","confirmPassword","oneOf","ref","CadastroElementos","values","data","nome_guia","email_guia","senha_guia","response","api","post","alert","JSON","stringify","message","history","push","err","console","log","Cadastro","dirty","isValid","handleChange","isSubmitting"],"mappings":"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","sourcesContent":["import React from 'react'\r\nimport {Container,Formulario,Conteudo,BodyForm} from '../styles/stylesPage/cadastroStyles'\r\nimport Imput from './inputs/input'\r\nimport Link from 'next/link'\r\nimport * as Yup from 'yup'\r\nimport { Formik, Form, Field, ErrorMessage } from 'formik';\r\nconst avaliar = Yup.object().shape({\r\n    name: Yup.string().min(3,\"\").required(),\r\n    password: Yup.string().min(8, \"\").required().max(15, 'A quantidade máxima é 15'),\r\n    email: Yup.string().email().required(),\r\n    // nacionalidade_guia:Yup.string().required(t('FieldRequired')),\r\n    confirmPassword: Yup.string().oneOf([Yup.ref('senha_guia'), null],\" \").required(),\r\n     // idade_guia:Yup.number().moreThan(17,t('AgeInputError')).required(t('FieldRequired')),\r\n     // telefone_guia: Yup.string().required(t('FieldRequired'))\r\n  })\r\n  async function CadastroElementos (values) {\r\n    const data = {\r\n      nome_guia: values.nome_guia,\r\n      email_guia: values.email_guia,\r\n      senha_guia: values.senha_guia,\r\n     \r\n     \r\n    }\r\n    /** caso tenha algum problema com a conexão mostra o erro específico */\r\n    try {\r\n      const response = await api.post('guia', data)\r\n      alert(JSON.stringify(response.data.message))\r\n      history.push('/login')\r\n    } catch (err) {\r\n      // alert('Erro no estabelecer conexão. ' + err.response.data.message)\r\n      console.log(data)\r\n      alert('Erro no estabelecer conexão. ' + err)\r\n    }\r\n  }\r\nconst Cadastro : React.FC=()=>{\r\n    return(\r\n           <Container>\r\n               <Conteudo>\r\ns\r\n                </Conteudo>\r\n    <Formulario>\r\n    <Formik\r\n       initialValues={{ email: '', password: '' }}\r\n       validationSchema={avaliar}\r\n       onSubmit={(values) => {\r\n            CadastroElementos(values)\r\n       }}\r\n     >\r\n       {({values, dirty, isValid, handleChange,isSubmitting}) => (\r\n         <Form>\r\n             <BodyForm>\r\n\r\n           <Field type=\"text\" name=\"name\" as={Imput} className=\"formCampo\"/>\r\n           <ErrorMessage name=\"name\" component=\"div\" className=\"formCampo\" />\r\n           <Field type=\"email\" name=\"email\" as={Imput} className=\"formCampo\"/>\r\n           <ErrorMessage name=\"email\" component=\"div\" className=\"formCampo\" />\r\n           <Field type=\"password\" name=\"password\" as={Imput} className=\"formCampo\"/>\r\n           <ErrorMessage name=\"password\" component=\"div\" className=\"formCampo\"/>\r\n           <Field type=\"password\" name=\"confirmPassword\" as={Imput} className=\"formCampo\"/>\r\n           <ErrorMessage name=\"password\" component=\"div\" className=\"formCampo\"/>\r\n\r\n           <button type=\"submit\" disabled={isSubmitting}>\r\n             Submit\r\n           </button>\r\n           </BodyForm>\r\n         </Form>\r\n       )}\r\n     </Formik> \r\n     <Link href='/'>\r\n                   <a>Login</a>\r\n    </Link>\r\n    </Formulario>\r\n             \r\n            </Container>\r\n    )\r\n}\r\nexport default Cadastro"]},"metadata":{},"sourceType":"module"}