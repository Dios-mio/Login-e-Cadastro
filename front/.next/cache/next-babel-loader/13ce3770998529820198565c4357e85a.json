{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\dios\\\\Desktop\\\\test\\\\front\\\\src\\\\pages\\\\cadastro.tsx\";\nimport { Container } from '../styles/stylesPage/cadastroStyles';\nimport Imput from './inputs/input';\nimport Link from 'next/link';\nimport * as Yup from 'yup';\nimport { Formik, Form, Field, ErrorMessage } from 'formik';\nconst avaliar = Yup.object().shape({\n  nome_guia: Yup.string().min(3, t('NameInputError')).required(t('FieldRequired')),\n  senha_guia: Yup.string().min(8, t('PasswordInputError')).required(t('FieldRequired')).max(15, 'A quantidade máxima é 15'),\n  email_guia: Yup.string().email(t('EmailInputError')).required(t('FieldRequired')),\n  // nacionalidade_guia:Yup.string().required(t('FieldRequired')),\n  idioma_guia: Yup.string().required(t('FieldRequired')),\n  region: Yup.string().required(t('FieldRequired')),\n  confirmPassword: Yup.string().oneOf([Yup.ref('senha_guia'), null], t('ConfirmPasswordInputError')).required(t('FieldRequired')) // idade_guia:Yup.number().moreThan(17,t('AgeInputError')).required(t('FieldRequired')),\n  // telefone_guia: Yup.string().required(t('FieldRequired'))\n\n});\n\nasync function CadastroElementos(values) {\n  const data = {\n    nome_guia: values.nome_guia,\n    email_guia: values.email_guia,\n    senha_guia: values.senha_guia,\n    // idade_guia:values.idade_guia\n    // telefone_guia: values.telefone_guia,\n    // pais_guia:values.nacionalidade_guia,\n    area_atuacao_guia: regioes.toString(),\n    idiomas_guia: idioma.toString()\n  };\n  /** caso tenha algum problema com a conexão mostra o erro específico */\n\n  try {\n    const response = await api.post('guia', data);\n    alert(JSON.stringify(response.data.message));\n    history.push('/login');\n  } catch (err) {\n    // alert('Erro no estabelecer conexão. ' + err.response.data.message)\n    console.log(data);\n    alert('Erro no estabelecer conexão. ' + err);\n  }\n}\n\nconst Cadastro = () => {\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: [/*#__PURE__*/_jsxDEV(Imput, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 16\n    }, this), /*#__PURE__*/_jsxDEV(Formik, {\n      initialValues: {\n        email: '',\n        password: ''\n      },\n      validationSchema: avaliar,\n      onSubmit: values => {\n        CadastroElementos(values);\n      },\n      children: ({\n        values,\n        dirty,\n        isValid,\n        handleChange\n      }) => /*#__PURE__*/_jsxDEV(Form, {\n        children: [/*#__PURE__*/_jsxDEV(Field, {\n          type: \"email\",\n          name: \"email\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 12\n        }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n          name: \"email\",\n          component: \"div\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 12\n        }, this), /*#__PURE__*/_jsxDEV(Field, {\n          type: \"password\",\n          name: \"password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 12\n        }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n          name: \"password\",\n          component: \"div\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 12\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          disabled: isSubmitting,\n          children: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 12\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 10\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 16\n    }, this), /*#__PURE__*/_jsxDEV(Link, {\n      href: \"/\",\n      children: /*#__PURE__*/_jsxDEV(\"a\", {\n        children: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 20\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 16\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 12\n  }, this);\n};\n\nexport default Cadastro;","map":{"version":3,"sources":["C:/Users/dios/Desktop/test/front/src/pages/cadastro.tsx"],"names":["Container","Imput","Link","Yup","Formik","Form","Field","ErrorMessage","avaliar","object","shape","nome_guia","string","min","t","required","senha_guia","max","email_guia","email","idioma_guia","region","confirmPassword","oneOf","ref","CadastroElementos","values","data","area_atuacao_guia","regioes","toString","idiomas_guia","idioma","response","api","post","alert","JSON","stringify","message","history","push","err","console","log","Cadastro","password","dirty","isValid","handleChange","isSubmitting"],"mappings":"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","sourcesContent":["import {Container} from '../styles/stylesPage/cadastroStyles'\r\nimport Imput from './inputs/input'\r\nimport Link from 'next/link'\r\nimport * as Yup from 'yup'\r\nimport { Formik, Form, Field, ErrorMessage } from 'formik';\r\nconst avaliar = Yup.object().shape({\r\n    nome_guia: Yup.string().min(3, t('NameInputError')).required(t('FieldRequired')),\r\n    senha_guia: Yup.string().min(8, t('PasswordInputError')).required(t('FieldRequired')).max(15, 'A quantidade máxima é 15'),\r\n    email_guia: Yup.string().email(t('EmailInputError')).required(t('FieldRequired')),\r\n    // nacionalidade_guia:Yup.string().required(t('FieldRequired')),\r\n    idioma_guia: Yup.string().required(t('FieldRequired')),\r\n    region: Yup.string().required(t('FieldRequired')),\r\n    confirmPassword: Yup.string().oneOf([Yup.ref('senha_guia'), null], t('ConfirmPasswordInputError')).required(t('FieldRequired')),\r\n     // idade_guia:Yup.number().moreThan(17,t('AgeInputError')).required(t('FieldRequired')),\r\n     // telefone_guia: Yup.string().required(t('FieldRequired'))\r\n  })\r\n  async function CadastroElementos (values) {\r\n    const data = {\r\n      nome_guia: values.nome_guia,\r\n      email_guia: values.email_guia,\r\n      senha_guia: values.senha_guia,\r\n      // idade_guia:values.idade_guia\r\n      // telefone_guia: values.telefone_guia,\r\n      // pais_guia:values.nacionalidade_guia,\r\n      area_atuacao_guia: regioes.toString(),\r\n      idiomas_guia: idioma.toString()\r\n    }\r\n    /** caso tenha algum problema com a conexão mostra o erro específico */\r\n    try {\r\n      const response = await api.post('guia', data)\r\n      alert(JSON.stringify(response.data.message))\r\n      history.push('/login')\r\n    } catch (err) {\r\n      // alert('Erro no estabelecer conexão. ' + err.response.data.message)\r\n      console.log(data)\r\n      alert('Erro no estabelecer conexão. ' + err)\r\n    }\r\n  }\r\nconst Cadastro : React.FC=()=>{\r\n    return(\r\n           <Container>\r\n               <Imput/>\r\n               <Formik\r\n       initialValues={{ email: '', password: '' }}\r\n       validationSchema={avaliar}\r\n       onSubmit={(values) => {\r\n            CadastroElementos(values)\r\n       }}\r\n     >\r\n       {({values, dirty, isValid, handleChange}) => (\r\n         <Form>\r\n           <Field type=\"email\" name=\"email\" />\r\n           <ErrorMessage name=\"email\" component=\"div\" />\r\n           <Field type=\"password\" name=\"password\" />\r\n           <ErrorMessage name=\"password\" component=\"div\" />\r\n           <button type=\"submit\" disabled={isSubmitting}>\r\n             Submit\r\n           </button>\r\n         </Form>\r\n       )}\r\n     </Formik>\r\n               <Link href='/'>\r\n                   <a>Login</a>\r\n               </Link>\r\n            </Container>\r\n    )\r\n}\r\nexport default Cadastro"]},"metadata":{},"sourceType":"module"}